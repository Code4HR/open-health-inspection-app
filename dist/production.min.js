"use strict";var openHealthDataAppControllers=angular.module("openHealthDataAppControllers",[]),openHealthDataApp=angular.module("openHealthDataApp",["ngRoute","ui.bootstrap","openHealthDataAppControllers","openHealthDataServices","openHealthDataAppFilters","ngTouch","geocodeModule","geolocationModule","resultsModule","geolocationModalModule"]);openHealthDataApp.config(["$routeProvider",function(a){a.when("/vendor/:id",{templateUrl:"partials/restaurantDetailView.html",controller:"restaurantDetailCtrl"}).when("/",{templateUrl:"partials/searchResultsPreview.html",controller:"searchResultsPreview"}).otherwise({redirectTo:"/"})}]),openHealthDataApp.run(["$rootScope","$location","$window",function(a,b,c){var d=c.innerHeight-100+64;c.innerWidth<776?angular.element(".results").css("max-height",d):angular.element(".cityResults").css("max-height",d-64),a.$on("$locationChangeSuccess",function(){ga("send","pageview",b.path())})}]),openHealthDataApp.directive("bindOnce",function(){return{scope:!0,link:function(a){setTimeout(function(){a.$destroy()},0)}}}).directive("focusMe",function(a,b){return{link:function(c,d,e){var f=b(e.focusMe);c.$watch(f,function(b){b===!0&&a(function(){d[0].focus()})})}}}).directive("twitter",[function(){return{link:function(a,b,c){setTimeout(function(){twttr.widgets.createShareButton(c.url,b[0],function(){},{count:"none",text:c.text})})}}}]),angular.module("openHealthDataAppFilters",[]).filter("was",function(){return function(a){return a?"was":"wasn't"}}).filter("categoryIcon",function(){return function(a){switch(a){case"Education":return"fa fa-graduation-cap";case"Hospitality":return"fa fa-building";case"Restaurant":return"fa fa-cutlery";case"Grocery":return"fa fa-shopping-cart";case"Government":return"fa fa-university";case"Medical":return"fa fa-plus-square";case"Mobile Food":return"fa fa-truck";case"Other":return"fa fa-spoon";default:return"fa fa-cutlery"}}}).filter("scoreColor",function(){return function(a){return a>=90?"greenText":a>=80&&90>a?"yellowGreenText":a>=70&&80>a?"yellowText":70>a?"redText":"grayText"}}).filter("scoreBorder",function(){return function(a){return a>=90?"greenBorder":a>=80&&90>a?"yellowGreenBorder":a>=70&&80>a?"yellowBorder":70>a?"redBorder":"grayBorder"}}).filter("scoreBadge",function(){return function(a){return a>=90?"greenBadge":a>=80&&90>a?"yellowGreenBadge":a>=70&&80>a?"yellowBadge":70>a?"redBadge":"grayBadge"}}),function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b){b.exports=function(b){b.directive("geocode",["geocodeService",function(a){var b,c={restrict:"E",replace:!1,scope:{callback:"="},templateUrl:"/templates/geocode.html",controllerAs:"ctrl"};return c.link=function(c){c.invalidZip=!1,c.resetZipValid=function(){c.invalidZip=!1},c.getLatLon=function(){a.getLatLon(c.zipcode).success(function(a){return void 0===a[0].zipcodes?void(c.invalidZip=!0):(b={coords:{latitude:a[0].zipcodes[0].latitude,longitude:a[0].zipcodes[0].longitude}},void(c.callback&&c.callback(b)))}).error(function(){})}},c}]),b.run(["$templateCache",function(b){b.put("/templates/geocode.html",a("./geocode--template.html"))}])}},{"./geocode--template.html":3}],2:[function(a,b){b.exports=function(a){a.factory("geocodeService",["$http","$q",function(a){return{getLatLon:function(b){var c="https://api.smartystreets.com/zipcode?auth-id=3528212138785631906&city=&state=&zipcode="+b;return a.get(c)}}}])}},{}],3:[function(a,b){b.exports='  <label>Zip Code</label>\n  <form name="geocodeForm" ng-submit="getLatLon()" novalidate >\n    <div class="input-group form-group input-group-lg">\n      <input class="form-control" name="zipcode" ng-change="resetZipValid()" ng-model="zipcode" ng-minlength="5" ng-maxlength="10" ng-pattern="/^\\d{5}(?:[-\\s]\\d{4})?$/" type="text" placeholder="Zip Code"/>\n      <span class="input-group-btn">\n        <button class="btn btn-default">\n          <span class="glyphicon glyphicon-search"></span>\n        </button>\n      </span>\n    </div>\n\n    <p class="alert alert-danger" ng-show="geocodeForm.zipcode.$error.pattern && !geocodeForm.zipcode.$error.minlength">\n      Please enter a valid 5-digit VA ZIP code\n    </p>\n\n    <p class="alert alert-warning" ng-show="invalidZip">\n      Invalid ZIP code\n    </p>\n\n  </form>\n'},{}],4:[function(a){var b=angular.module("geocodeModule",[]);a("./geocode--service.js")(b),a("./geocode--directive.js")(b)},{"./geocode--directive.js":1,"./geocode--service.js":2}],5:[function(a,b){b.exports=function(b){b.directive("geolocation",["geolocationService",function(a){var b={restrict:"E",replace:!1,scope:{callback:"="},templateUrl:"/templates/geolocation.html",controllerAs:"ctrl"};return b.link=function(b){b.getLocation=function(){a.getLatLon().then(function(a){b.callback&&b.callback(a)})}},b}]),b.run(["$templateCache",function(b){b.put("/templates/geolocation.html",a("./geolocation--template.html"))}])}},{"./geolocation--template.html":7}],6:[function(a,b){b.exports=function(a){a.factory("geolocationService",["$q","$timeout",function(a,b){return{getLatLon:function(){function c(){e.reject("The request to get user information timed out")}var d={coords:{latitude:null,longitude:null}},e=a.defer();return b(c,1e4),navigator.geolocation?(navigator.geolocation.getCurrentPosition(function(a){b.cancel(c),a.coords.latitude>36.533333&&a.coords.latitude<39.466667&&a.coords.longitude<-75.25&&a.coords.longitude>-83.683333?(console.log("coordinates are within Virgina"),d=a):(console.log("Coming from out of state or geolocation unavailable."),d.coords={latitude:36.84687,longitude:-76.29228710000001}),e.resolve(d)},function(a){b.cancel(c);var d;switch(a.code){case a.PERMISSION_DENIED:d="User denied the request for Geolocation.";break;case a.POSITION_UNAVAILABLE:d="Location information is unavailable.";break;case a.TIMEOUT:d="The request to get user location timed out.";break;case a.UNKNOWN_ERROR:d="An unknown error occurred."}e.reject(d)}),e.promise):void 0}}}])}},{}],7:[function(a,b){b.exports='<label>Using GPS</label>\n<form ng-submit="getLocation()" class="input-group form-group" novalidate>\n  <button class="btn btn-primary btn-lg">GPS</button>\n</form>\n'},{}],8:[function(a,b){b.exports=function(a){a.factory("Geosearch",["$resource","$rootScope","$filter","Toast",function(a,b,c,d){var e={};e.results={},e.index=0,e.position={};var f=[805,1609,3219,4828,6437,8047,9656],g=["Â½","1","2","3","4","5","6"],h=a("http://api.openhealthinspection.com/vendors?lat=:lat&lng=:lon&dist=:dist",{},{query:{method:"JSONP",params:{lat:"36",lon:"-72",dist:"1000",callback:"JSON_CALLBACK"}}});return e.get=function(a,i){e.position=a,h.query({lat:a.coords.latitude,lon:a.coords.longitude,dist:f[i]||a.dist},function(a){return e.index>6?void console.log("not going to work"):(d.searchAreaText="Within "+g[i]+" mi.",d.query="",b.$broadcast("updateToast"),e.index++,e.results=_.values(_.reject(a,function(a){return _.isUndefined(a.name)})),e.results.length<20?e.get(e.position,e.index+1):(e.results.forEach(function(a){a.dist=621371e-9*a.dist,a.score=a.score?Math.round(a.score):"n/a"}),e.results=c("orderBy")(e.results,"dist",!1),void b.$broadcast("geosearchFire")))})},e}])}},{}],9:[function(a){var b=angular.module("geolocationModule",[]);a("./geolocation--directive")(b),a("./geolocation--service")(b),a("./geosearch--service")(b)},{"./geolocation--directive":5,"./geolocation--service":6,"./geosearch--service":8}],10:[function(a){var b=angular.module("geolocationModalModule",[]);a("./modal--controller.js")(b),a("./modal-instance--controller.js")(b)},{"./modal--controller.js":11,"./modal-instance--controller.js":12}],11:[function(a,b){b.exports=function(a){a.factory("geolocationModal",["$modal",function(a){var b={};return b.open=function(b){var c;return a.open({templateUrl:"partials/modal.html",controller:"modalInstanceController",size:b,resolve:{geoOptions:function(){return c}}}).result},b}])}},{}],12:[function(a,b){b.exports=function(a){a.controller("modalInstanceController",["$scope","$modalInstance","$location",function(a,b,c){a.returnLocation=function(a){b.close(a),("/"!==c.url()||""!==c.url())&&c.url("/")},a.cancel=function(){b.dismiss("cancel")}}])}},{}],13:[function(a,b){b.exports=function(a){a.factory("resultsService",[function(){return{}}])}},{}],14:[function(a,b){b.exports=function(b){b.directive("result",[function(){var a={restrict:"E",replace:!1,templateUrl:"/templates/result.html",controllerAs:"ctrl"};return a.link=function(a,b,c){a.restaurant=a.$eval(c.data)},a}]),b.run(["$templateCache",function(b){b.put("/templates/result.html",a("./../templates/result--template.html"))}])}},{"./../templates/result--template.html":17}],15:[function(a,b){b.exports=function(b){b.directive("results",[function(){var a,b,c={restrict:"E",replace:!1,scope:!0,templateUrl:"/templates/results.html",controllerAs:"ctrl"};return c.link=function(a){a.hasResults=!1},c.controller=["$rootScope","$location","$scope","Geosearch","geolocationModal","Search",function(c,d,e,f,g,h){b||g.open().then(function(a){f.get(a,0)},function(){f.get({coords:{latitude:36.84687,longitude:-76.29228710000001}},0)}),e.$watch(function(){return f.results},function(){a="geosearch",e.results=f.results,b=f.results,e.hasResults=e.results.length>1?!0:!1}),c.$on("searchFire",function(){a="search",e.results=h.results,b=h.results,"/"!==d.url()&&d.url("/"),e.hasResults=e.results.length>1?!0:!1}),e.loadMore=function(){"search"===a?(console.log("get more search results of that name?"),c.$broadcast("moreSearch")):"geosearch"===a&&(console.log("get more search results around here."),f.get(f.position,f.index+1))}}],c}]),b.run(["$templateCache",function(b){b.put("/templates/results.html",a("./../templates/results--template.html"))}])}},{"./../templates/results--template.html":18}],16:[function(a){var b=angular.module("resultsModule",[]);a("./directives/results--directive.js")(b),a("./directives/result--directive.js")(b)},{"./directives/result--directive.js":14,"./directives/results--directive.js":15}],17:[function(a,b){b.exports='<div ng-if="$index % 2 === 0" class="col-xs-12 visible-sm clearfix"></div>\n<div ng-if="$index % 3 === 0" class="col-xs-12 visible-md visible-lg clearfix"></div>\n\n<div class="list-container col-sm-6 col-md-4">\n  <div class="card clearfix drop-shadow {{restaurant.score | scoreBorder}}">\n    <a href="#{{restaurant.url}}">\n      <div class="title clearfix">\n        <i class="{{restaurant.category | categoryIcon }} col-xs-2 category-icon"></i>\n        <ul class="col-xs-7 info">\n          <li class="name">{{restaurant.name}}</li>\n          <li class="address">{{restaurant.address}}</li>\n        </ul>\n        <p class="score col-xs-3 {{restaurant.score | scoreColor}}">{{restaurant.score}}</p>\n      </div>\n      <div class="inspections visible-md visible-lg"></div>\n      <p class="readMore visible-sm visible-md visible-lg">Read this vendor\'s full report.</p>\n    </a>\n  </div>\n</div>\n'},{}],18:[function(a,b){b.exports='<section id="results">\n  <ul>\n    <li ng-repeat="result in results">\n      <result data="result"></result>\n    </li>\n    <li class="clearfix"></li>\n\n    <li class="container load-more-button" ng-show="hasResults">\n      <div class="row">\n        <a class="col-xs-12" ng-click="loadMore()">Expand Search Radius</a>\n      </div>\n    </li>\n\n  </ul>\n</div>\n'},{}],19:[function(){},{}]},{},[1,2,4,5,6,8,9,10,11,12,13,14,15,16,19]);var openHealthDataServices=angular.module("openHealthDataServices",["ngResource"]);openHealthDataServices.factory("Inspections",["$resource",function(a){return a("http://api.openhealthinspection.com/inspections?vendorid=:vendorid",{},{query:{method:"JSONP",params:{vendorid:"",callback:"JSON_CALLBACK"}}})}]),openHealthDataServices.factory("Search",["$resource",function(a){return a("http://api.openhealthinspection.com/vendors",{},{query:{method:"JSONP",params:{callback:"JSON_CALLBACK"}}})}]),openHealthDataServices.factory("Toast",function(){return{query:"",searchAreaText:""}}),openHealthDataAppControllers.controller("cityJumpCtrl",["$scope","$rootScope","Search","Geosearch","$http",function(a,b,c,d,e){b.isCityJumpVisible=!1,e.get("js/libs/vaPopCities.json").success(function(b){a.cities=b}),a.cityJump=function(a){b.toggleCityJump(!1),console.log(c),console.log("city center is ",a),c.city=a,b.isCityJumpVisible=!1,b.$broadcast("cityJumpFire")}}]),openHealthDataAppControllers.controller("restaurantDetailCtrl",["$scope","$routeParams","$http","$location","$rootScope","Geosearch","Inspections",function(a,b,c,d,e,f,g){e.isVisible=!1,e.isCloseButtonVisible=!0,e.toggleCityJump(!1),a.results=g.query({vendorid:b.id},function(){var c=a.results[b.id];e.restaurantName=c.name,c.score=_.isUndefined(c.score)?"n/a":Math.round(c.score),e.restaurantPermalink=d.absUrl()})}]),openHealthDataAppControllers.controller("searchCtrl",["$scope","$rootScope","$timeout","Search","Geosearch","geolocationModal","$filter","Toast","$window","$location",function(a,b,c,d,e,f,g,h,i,j){var k;a.searchAreaText="This area",b.$on("cityJumpFire",function(){try{a.searchAreaText=d.city.name}catch(b){a.searchAreaText="Near me",d.city=void 0}}),b.$on("updateToast",function(){a.searchQuery=h.query,a.searchAreaText=h.searchAreaText}),b.toggleList=function(){console.log("clicked toggleList"),b.isVisible?b.isVisible=!1:(b.isCityJumpVisible=!1,b.isVisible=!0)},b.toggleSearchField=function(){console.log("clicked search button"),b.toggleCityJump(!1),b.isSearchbarVisible=!b.isSearchbarVisible,b.isSearchbarVisible===!1&&(b.isCityJumpVisible=!1)},b.toggleCityJump=function(a){console.log("toggle city jump"),b.isCityJumpVisible=a,a?(angular.element("body").css("overflow","hidden"),angular.element("#dismissScreen").css("z-index",1030)):a||(angular.element("body").css("overflow","auto"),angular.element("#dismissScreen").css("z-index",-1))},b.goToResults=function(){j.url("/")},a.getLocationButton=function(){f.open().then(function(a){e.get(a,0)})};var l=0,m=[805,1609,3219,4828,6437,8047,9656],n=["Â½","1","2","3","4","5","6"];a.nameSearch=function(c){if(b.isSearchbarVisible=!1,l=c,c>6&&console.log("no more results to give nearby."),a.query.length<2)return void i.alert("Please enter a longer search term.");if(_.isUndefined(d.city)){if(void 0===m[c]&&void 0===k.dist)return console.log("no results found anywhere"),void i.alert("We weren't able to find any results for "+a.query+" in the state of Virginia");void 0===m[c]?(console.log("unable to find any "+a.query+" nearby..."),k={name:a.query},h.searchAreaText="In Virginia",h.query=a.query):(console.log("searching for results within "+m[c]),b.showMore=!0,k={name:a.query,lat:e.position.coords.latitude,lng:e.position.coords.longitude,dist:m[c]},h.searchAreaText="Within "+n[c]+" mi.",h.query=a.query)}else console.log("hide show more"),b.showMore=!1,console.log("search for "+a.query+" in "+d.city.name),k={name:a.query,city:d.city.name},h.searchAreaText=d.city.name,h.query=a.query;b.$broadcast("updateToast"),d.results=d.query(k,function(){return console.log(d.results),d.results=_.values(_.reject(d.results,function(a){return _.isUndefined(a.name)})),0===d.results.length?k.city?(alert('No results for "'+k.name+'" in '+k.city+"."),"/#"===j.url()?b.isVisible=!0:void 0):a.nameSearch(c+1):(d.results.forEach(function(a,b){_.isUndefined(a.coordinates)?d.results.splice(b,1):a.score=_.isUndefined(a.score)||_.isNull(a.score)?"n/a":Math.round(a.score)}),d.results=g("orderBy")(d.results,"dist",!1),void b.$broadcast("searchFire"))})},b.$on("moreSearch",function(){a.nameSearch(l+1)})}]),openHealthDataAppControllers.controller("searchResultsCtrl",["$scope","$rootScope","$location","Search","Geosearch",function(a,b,c,d,e){var f;b.showMore=!1,b.$on("searchFire",function(){f="search",console.log("Displaying the results of your search,along with our score."),a.results=d.results,b.isVisible=!0,a.resultsCount=d.results.length,c.url("/#")}),b.$on("geosearchFire",function(){f="geosearch",console.log("printing results to scope."),a.results=e.results,b.showMore=!0,console.log("Display button: "+b.showMore)}),a.loadMore=function(){console.log("Clicked the button"),"search"===f?(console.log("get more search results of that name?"),b.$broadcast("moreSearch")):"geosearch"===f&&(console.log("get more search results around here."),b.$broadcast("moreGeosearch"))},a.map=e.map,b.isVisible=!1}]),openHealthDataAppControllers.controller("searchResultsPreview",["$scope","$rootScope",function(a,b){b.isVisible=!0,b.isCloseButtonVisible=!1}]);